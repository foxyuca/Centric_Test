<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.centric.products</groupId>
	<artifactId>products</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>products</name>
	<url>http://maven.apache.org</url>

   <parent>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-starter-parent</artifactId>
       <version>2.1.6.RELEASE</version>
   </parent>
	<properties>
		<plugin.checkstyle>3.1.0</plugin.checkstyle>
		<checkstyle.file>${project.basedir}/checkstyle.xml</checkstyle.file>
      	<checkstyle.allowedViolations>0</checkstyle.allowedViolations>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.12</junit.version>
		<joda-time.version>2.9.9</joda-time.version>
		<javaCodeQuality.version>1.0</javaCodeQuality.version>
		<checkstyle.tools.version>8.1</checkstyle.tools.version>
		<findsecbugs.version>1.6.0</findsecbugs.version>
		<fasterxml.jackson>2.9.9</fasterxml.jackson>
        <fasterxml.jackson.databind>2.10.0.pr1</fasterxml.jackson.databind>
		<mavenCompilerPlugin.version>3.5.1</mavenCompilerPlugin.version>
		<mavenCheckstylePlugin.version>2.17</mavenCheckstylePlugin.version>
		<findbugsMavenPlugin.version>3.0.4</findbugsMavenPlugin.version>
		<mavenDependencyPlugin.version>2.10</mavenDependencyPlugin.version>
		<mavenJarPlugin.version>3.0.0</mavenJarPlugin.version>
		<findbugs.annotations.version>3.0.1</findbugs.annotations.version>
		<mockito.all.version>1.10.19</mockito.all.version>
		<powermock.junit4.version>1.7.0</powermock.junit4.version>
		<powermock.mockito.version>1.7.0</powermock.mockito.version>
		<springfox-swagger.version>2.6.1</springfox-swagger.version>
		<commons-io.version>1.3.2</commons-io.version>
		<spring-cloud.version>1.1.5.RELEASE</spring-cloud.version>
		<hibernate.validation.version>5.0.1.Final</hibernate.validation.version>
	</properties>
	

	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgs>
						<compilerArg>-Xlint:all</compilerArg>
						<compilerArg>-Xdoclint:all/protected</compilerArg>
						<compilerArg>-g</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>

			<plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-checkstyle-plugin</artifactId>
               <version>${plugin.checkstyle}</version>
               <executions>
                   <execution>
                       <phase>validate</phase>
                       <goals>
                           <goal>check</goal>
                       </goals>
                   </execution>
               </executions>
               <configuration>
                   <configLocation>${checkstyle.file}</configLocation>
                   <maxAllowedViolations>${checkstyle.allowedViolations}</maxAllowedViolations>
                   <consoleOutput>true</consoleOutput>
                   <logViolationsToConsole>true</logViolationsToConsole>
                   <sourceDirectories>
                       <directory>${project.build.sourceDirectory}</directory>
                   </sourceDirectories>
               </configuration>
           </plugin>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

<!--       <plugin> -->
<!--         <groupId>org.apache.maven.plugins</groupId> -->
<!--         <artifactId>maven-jar-plugin</artifactId> -->
<!--         <configuration> -->
<!--           <archive> -->
<!--             <manifest> -->
<!--               <mainClass>com.zola.test.invoices.InvoicesTestServiceApplication.java</mainClass> -->
<!--               custom classpath layout required due to bugs in Maven -->
<!--               <classpathLayoutType>custom</classpathLayoutType> -->
<!--               <customClasspathLayout>lib/$${artifact.artifactId}-$${artifact.baseVersion}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout> -->
<!--               <addClasspath>true</addClasspath> -->
<!--               <useUniqueVersions>false</useUniqueVersions> -->
<!--             </manifest> -->
<!--           </archive> -->
<!--         </configuration> -->
<!--       </plugin> -->


		</plugins>

	</build>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>

		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>findbugs</artifactId>
			<version>${findbugs.annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.all.version}</version>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.junit4.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>4.23</version>
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		
		<!--Jackson-->
           <dependency>
               <groupId>com.fasterxml.jackson.core</groupId>
               <artifactId>jackson-core</artifactId>
               <version>${fasterxml.jackson}</version>
           </dependency>
           <dependency>
             <groupId>com.fasterxml.jackson.core</groupId>
             <artifactId>jackson-databind</artifactId>
             <version>${fasterxml.jackson.databind}</version>
           </dependency>
           <dependency>
             <groupId>com.fasterxml.jackson.datatype</groupId>
             <artifactId>jackson-datatype-jsr310</artifactId>
             <version>${fasterxml.jackson}</version>
           </dependency>
           <dependency>
             <groupId>com.fasterxml.jackson.core</groupId>
             <artifactId>jackson-annotations</artifactId>
             <version>${fasterxml.jackson}</version>
           </dependency>
           <dependency>
             <groupId>com.fasterxml.jackson.datatype</groupId>
             <artifactId>jackson-datatype-jdk8</artifactId>
             <version>${fasterxml.jackson}</version>
           </dependency>
		
		<!-- Validators -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validation.version}</version>
		</dependency>
		
		

		<!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>${nekohtml.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
	</dependencies>
	<modules>
    <module>products-core</module>
    <module>products-service</module>
  </modules>
</project>